from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain_community.vectorstores import Pinecone
from langchain_community.embeddings import HuggingFaceEmbeddings
from database import fetch_data
from pinecone_util import upsert_vectors

def chunk_and_store_data(model_name):
    data = fetch_data()
    text_splitter = RecursiveCharacterTextSplitter(chunk_size=500, chunk_overlap=50)
    embedding_model = HuggingFaceEmbeddings(model_name=model_name)

    for row in data:
        chunks = text_splitter.split_text(row['text_column'])
        vectors = [(f"{row['id']}_{i}", embedding_model.embed(chunk)) for i, chunk in enumerate(chunks)]
        print("length of vectors")
        print(vectors)
        upsert_vectors(vectors)
        return
