import os
from pinecone import Pinecone, ServerlessSpec
from dotenv import load_dotenv
from langchain_community.embeddings import HuggingFaceEmbeddings

load_dotenv()
pinecone=Pinecone(api_key=os.getenv("PINECONE_API_KEY"))
# , environment=os.getenv("PINECONE_ENVIRONMENT")
index_name = os.getenv("PINECONE_INDEX_NAME")

# if index_name not in Pinecone.list_indexes():
#     pinecone.create_index(index_name, dimension=768)

if index_name not in pinecone.list_indexes().names():
    pinecone.create_index(
        name=index_name,
        dimension=2,
        metric="cosine",
        spec=ServerlessSpec(
            cloud='aws', 
            region='us-east-1'
        ) 
    )
index = pinecone.Index(index_name)


def upsert_vectors(vectors):
    index.upsert(vectors)
    print(index.describe_index_stats())

def query_pinecone(model_name, query, top_k=5):
    embedding_model = HuggingFaceEmbeddings(model_name=model_name)
    query_vector = embedding_model.embed_query(query)
    results = index.query([query_vector], top_k=top_k)
    return results





# pinecone_store = PineconeVectorStore.from_documents(
#     documents= documents,
#     embedding=embeddings,
#     index_name=index_name
# )
 
